@using WebApp.Resources
@model WebApp.ViewModels.AddressViewModel
<div class="form-horizontal">
    <h4>Address</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*Remember that Keys and fields that don't show on the UI must be hidden fields for persistence *@
    @Html.HiddenFor(x => x.AddressId)
    @Html.HiddenFor(model => model.UserId)
    <div class="form-group">
        @Html.LabelFor(model => model.AddressName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AddressName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddressName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AddressLn1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AddressLn1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddressLn1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AddressLn2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AddressLn2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddressLn2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CountryId, Model.CountryList, LanguagePack.CountrySelectLabel, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StateParishId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.StateParishId, Model.StateParishList, LanguagePack.ParishStateSelectLabel, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StateParishId, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="@LanguagePack.SubmitButtonLabel" class="btn btn-default" />
        </div>
    </div>
</div>
